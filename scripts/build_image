#!/bin/bash

# set readable variables
export JAVA_VERSION_ARG="$1"
export NODE_VERSION_ARG="$2"
export MBT_VERSION="$3"

# print parameters
echo "Java version arg: ${JAVA_VERSION_ARG}, Node version arg: ${NODE_VERSION_ARG}, \
MBT Version arg: ${MBT_VERSION}"

# common_image includes some exported vars and check methods
source $PWD/scripts/common_image

# build docker image
cp Dockerfile_mbtci_java${JAVA_MAJOR_VERSION} Dockerfile
sed  -i "s/NODE_VERSION_ARG/v${NODE_VERSION_ARG}/" Dockerfile
echo "Build mbtci${JAVA_VERSION}${NODE_VERSION}:${MBT_VERSION}"
docker build -t mbtci${JAVA_VERSION}${NODE_VERSION}:${MBT_VERSION} .

# test image
if [ "$JAVA_MAJOR_VERSION" = "11" ] || [ "$JAVA_MAJOR_VERSION" = "8" ] || [ "$JAVA_MAJOR_VERSION" = "17" ]; then
	cp test/goss/goss_template.yaml test/goss/goss.yaml
	sed  -i "s/NODE_VERSION_ARG/v${NODE_VERSION_ARG}/" test/goss/goss.yaml
	docker-compose -f ./docker-compose.test.yml up --buildgit push -u origin release
fi

# cleanup
rm -f Dockerfile
rm -f test/goss/goss.yaml