#!/bin/sh

set -o errexit

# set readable variables
export JAVA_VERSION_TEMPLATE="$1"
export NODE_VERSION_TEMPLATE="$2"
export MBT_VERSION="$3"
export DOCKER_REGISTRY_USER="$4"
export DOCKER_REGISTRY_TOKEN="$5"
export DOCKER_REGISTRY="$6"

# set jvm and node version
if [ $JAVA_VERSION_TEMPLATE == "11" ]; then
	export JAVA_VERSION="-java11"
	export NODE_VERSION="-node$(echo $NODE_VERSION_TEMPLATE |awk -F. '{printf "%d", $1}')"
	cp Dockerfile_sapmachine Dockerfile
	sed  -i "s/NODE_VERSION_TEMPLATE/v${NODE_VERSION_TEMPLATE}/" Dockerfile
	cp test/goss/goss_sapmachine.yaml test/goss/goss.yaml
	sed  -i "s/NODE_VERSION_TEMPLATE/v${NODE_VERSION_TEMPLATE}/" test/goss/goss.yaml
elif [ $JAVA_VERSION_TEMPLATE == "8" ]; then
	export JAVA_VERSION="-java8"
	export NODE_VERSION="-node$(echo $NODE_VERSION_TEMPLATE |awk -F. '{printf "%d", $1}')"
	cp Dockerfile_sapjvm Dockerfile
	sed  -i "s/NODE_VERSION_TEMPLATE/v${NODE_VERSION_TEMPLATE}/" Dockerfile
	cp test/goss/goss_sapjvm.yaml test/goss/goss.yaml
	sed  -i "s/NODE_VERSION_TEMPLATE/v${NODE_VERSION_TEMPLATE}/" test/goss/goss.yaml
else
	export JAVA_VERSION=""
	export NODE_VERSION="-alpine"
	cp Dockerfile_alpine Dockerfile
fi

# set image prefix by docker registry
if [ $DOCKER_REGISTRY == "ghcr.io" ]; then
	export IMAGE_PREFIX="ghcr.io/sap"
else
	export IMAGE_PREFIX="devxci"
fi

# build image
docker login $DOCKER_REGISTRY -u $DOCKER_REGISTRY_USER -p $DOCKER_REGISTRY_TOKEN
echo "Release mbtci${JAVA_VERSION}${NODE_VERSION}:${MBT_VERSION} to $DOCKER_REGISTRY"
docker build -t mbtci${JAVA_VERSION}${NODE_VERSION}:${MBT_VERSION} .
if [ $JAVA_VERSION_TEMPLATE == "11" ] || [ $JAVA_VERSION_TEMPLATE == "8" ]; then
	docker-compose -f ./docker-compose.test.yml up --build
fi
docker tag mbtci${JAVA_VERSION}${NODE_VERSION}:${MBT_VERSION} ${IMAGE_PREFIX}/mbtci${JAVA_VERSION}${NODE_VERSION}:${MBT_VERSION}
docker push ${IMAGE_PREFIX}/mbtci${JAVA_VERSION}${NODE_VERSION}:${MBT_VERSION}
docker tag mbtci${JAVA_VERSION}${NODE_VERSION}:${MBT_VERSION} ${IMAGE_PREFIX}/mbtci${JAVA_VERSION}${NODE_VERSION}:latest
docker push ${IMAGE_PREFIX}/mbtci${JAVA_VERSION}${NODE_VERSION}:latest

rm -f Dockerfile
rm -f test/goss/goss.yaml