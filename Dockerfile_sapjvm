FROM vertigo/sap-jvm8:latest

# Build time variables
ARG MTA_USER_HOME=/home/mta
ARG MBT_VERSION=1.2.1
ARG GO_VERSION=1.15.6
ARG NODE_VERSION=NODE_VERSION_TEMPLATE
ARG MAVEN_VERSION=3.6.3

ENV PYTHON /usr/bin/python2.7
ENV M2_HOME=/opt/maven/apache-maven-${MAVEN_VERSION}
ENV GOPATH /go
ENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH
ENV CGO_ENABLED=0
ENV GOOS=linux

# Download required env tools
RUN yum update -y && \
    yum install -y git openssl curl && \

# install node
    NODE_HOME=/opt/nodejs; mkdir -p ${NODE_HOME} && \
    curl --fail --silent --output - "https://nodejs.org/dist/${NODE_VERSION}/node-${NODE_VERSION}-linux-x64.tar.gz" \
     | tar -xzv -f - -C "${NODE_HOME}" && \
    ln -s "${NODE_HOME}/node-${NODE_VERSION}-linux-x64/bin/node" /usr/local/bin/node && \
    ln -s "${NODE_HOME}/node-${NODE_VERSION}-linux-x64/bin/npm" /usr/local/bin/npm && \
    ln -s "${NODE_HOME}/node-${NODE_VERSION}-linux-x64/bin/npx" /usr/local/bin/ && \
    npm install --prefix /usr/local/ -g grunt-cli && \

# install ui5-cli temporay solution
    npm install --prefix /usr/local/ -g @ui5/cli && \

# installing Golang
    curl -O https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz && tar -xvf go${GO_VERSION}.linux-amd64.tar.gz && \
    mv go /usr/local && \
    mkdir -p "$GOPATH/src" "$GOPATH/bin" && chmod -R 777 "$GOPATH" && \
    mkdir -p ${GOPATH}/src ${GOPATH}/bin  && \

# update maven home
    M2_BASE="$(dirname ${M2_HOME})" && \
    mkdir -p "${M2_BASE}" && \
    curl --fail --silent --output - "https://apache.osuosl.org/maven/maven-3/${MAVEN_VERSION}/binaries/apache-maven-${MAVEN_VERSION}-bin.tar.gz" \
    | tar -xzvf - -C "${M2_BASE}" && \
    ln -s "${M2_HOME}/bin/mvn" /usr/local/bin/mvn && \
    chmod --recursive a+w "${M2_HOME}"/conf/* && \

# Download MBT
    curl -L "https://github.com/SAP/cloud-mta-build-tool/releases/download/v${MBT_VERSION}/cloud-mta-build-tool_${MBT_VERSION}_Linux_amd64.tar.gz" | tar -zx -C /usr/local/bin && \
    chown root:root /usr/local/bin/mbt && \

# handle users permission
    useradd --home-dir "${MTA_USER_HOME}" \
                 --create-home \
                 --shell /bin/bash \
                 --user-group \
                 --uid 1000 \
                 --comment 'Cloud MTA Build Tool' \
                 --password "$(echo weUseMta |openssl passwd -1 -stdin)" mta && \
# allow anybody to write into the images HOME
    chmod a+w "${MTA_USER_HOME}" && \

# Install essential build tools and python, required for building db modules
	yum groupinstall -y 'Development Tools' gcc openssl-devel bzip2-devel && \
    cd /usr/src && \
	wget https://www.python.org/ftp/python/2.7.18/Python-2.7.18.tgz && \
	tar xzf Python-2.7.18.tgz && \
	python -V && \
	rm -r Python-2.7.18.tgz && \

# Remove unneded packages
    rpm -e --nodeps curl && \
    rm -rf /var/lib/apt/lists/*

ENV PATH=$PATH:./node_modules/.bin HOME=${MTA_USER_HOME}
WORKDIR /project
USER mta









