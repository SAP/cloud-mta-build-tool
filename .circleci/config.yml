# Golang CircleCI 2.0 configuration
version: 2
jobs:
  build:
    docker:
      - image: circleci/golang:1.11.5
    environment:
      - DEP_VERSION: 0.5.0
    working_directory: /go/src/github.com/SAP/cloud-mta-build-tool
    steps:
      - checkout
      - run: go version
      - run: go env
      - run:
          name: install dep
          command: |
            apk update && apk add curl git build-base bash
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
      - run: go test -v ./...
      - run: sudo chown circleci:circleci /go/bin
      - run: make tools
      - run: make lint
      - run:
          name: cov install coverge deps
          command: |
            go get golang.org/x/tools/cmd/cover
            go get github.com/mattn/goveralls
            go get github.com/modocache/gover
            go install github.com/mattn/goveralls
            go install github.com/modocache/gover
      - run: go test -v ./... -coverprofile=mta.coverprofile
      - run: gover
      - run: goveralls -v -service=circle-ci -coverprofile=gover.coverprofile -repotoken $COVERALLS_TOKEN

  integration_test:
    docker:
      - image: shimit/mbt_multi:0.1.0
    working_directory: /go/src/github.com/SAP/cloud-mta-build-tool
    steps:
      - checkout
      - run:
          name: install dep
          command: |
            apk update && apk add curl git build-base bash
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
      - run: cf login -a $CF_API -o $ORG -s $SPACE -u $TECH_USER -p $TECH_PASS
      - run: cd integration &&  go test -tags=integration


  release_new:
    docker:
      - image: circleci/golang:1.11.5
    working_directory: /go/src/github.com/SAP/cloud-mta-build-tool
    steps:
      - add_ssh_keys:
          fingerprints:
            - "34:86:26:17:59:ed:71:fa:b8:37:fc:d6:a4:68:af:0e"
      - checkout
      - run:
          name: bump release version
          command: |
            CURR_MBT_VERSION=$(cat ./VERSION)
            echo "Current release: ${CURR_MBT_VERSION}"
            MBT_VERSION=$(echo $CURR_MBT_VERSION | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')
            echo "New release: ${MBT_VERSION}"
            sed  -i "/\"version\":/s/${CURR_MBT_VERSION}/${MBT_VERSION}/" ./package.json
            sed  -i "/\"version\":/s/${CURR_MBT_VERSION}/${MBT_VERSION}/" ./internal/version/version_cfg.go
            sed  -i "/cli_version:/s/${CURR_MBT_VERSION}/${MBT_VERSION}/" ./configs/version.yaml
            sed  -i "s/${CURR_MBT_VERSION}/${MBT_VERSION}/" ./VERSION
            git add ./package.json ./internal/version/version_cfg.go ./configs/version.yaml ./VERSION
            git config user.email "${MBT_REPO_USER_EMAIL}"
            git config user.name "${MBT_REPO_USER}"
            git commit -m "[skip ci] Bump version ${MBT_VERSION}"
            #Push quietly to prevent showing the token in log
            git push -q https://github.com/SAP/cloud-mta-build-tool.git master
      - run:
          name: release new version
          command: curl -sL https://git.io/goreleaser | bash
#     - run:
#         name: publish to npm
#         command: npm publish

workflows:
  version: 2
  build_integration:
    jobs:
      - build

  integration-test:
    jobs:
      - integration_test:
          filters:
            branches:
              only: master

#  release:
#    jobs:
#      - release_new:
#          filters:
#            branches:
#              ignore: /.*/
#            tags:
#              only: /v[0-9]+(\.[0-9]+)*(-.*)*/
#          requires:
#            - build
#            - integration_test
