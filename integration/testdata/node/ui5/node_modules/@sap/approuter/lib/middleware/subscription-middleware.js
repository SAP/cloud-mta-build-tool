'use strict';
var vcapUtils = require('../utils/vcap-utils');
var subscriptionUtils = require('../utils/subscription-utils');

module.exports = function (req, res, next) {
  var missingBindingErr = null;

  if (req.url.indexOf('/callback/v1.0/dependencies') > -1){
    missingBindingErr = isSaaSRegistryBound();
    if (missingBindingErr){
      return next(missingBindingErr);
    }
    subscriptionUtils.checkScopes(req, function (err) {
      if (err) {
        if (!err.status) {
          err.status = err.statuscode; // if error comes from xssec.createSecurityContext, it will contain statuscode and not status
        }
        return next(err);
      } else {
        var dependencies = subscriptionUtils.getDependencies();
        res.setHeader('Content-Type', 'application/json');
        res.end(JSON.stringify(dependencies));
      }
    });
  } else if (req.url.indexOf('/callback/v1.0/tenants/') > -1){
    missingBindingErr = isSaaSRegistryBound();
    if (missingBindingErr){
      return next(missingBindingErr);
    }
    subscriptionUtils.checkScopes(req, function (err) {
      if (err) {
        if (!err.status) {
          err.status = err.statuscode; // if error comes from xssec, it contains statuscode and not status
        }
        return next(err);
      } else {
        subscriptionUtils.getApplicationURL(req, function (err, url){
          if (err){
            return next(err);
          }
          res.end (url);
        });
      }
    });
  } else {
    next();
  }
};

function isSaaSRegistryBound (){
  if (!vcapUtils.getServiceCredentialsByLabel('saas-registry')){
    return subscriptionUtils.getError('Binding to SaaS Registry is required for this type of request', 400);
  }
  return null;
}


