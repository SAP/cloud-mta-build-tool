'use strict';

var LoggingLib = require('@sap/logging');
var auditLogging = require('@sap/audit-logging');
var xsenv = require('@sap/xsenv');

var appLoggingContext = LoggingLib.createAppContext();

module.exports.getAuditLogger = function (callback) {

  var auditlogCredentials;
  try {
    auditlogCredentials = xsenv.cfServiceCredentials({tag: 'auditlog'});
  } catch (error){
    auditlogCredentials = null;
  }

  if (!auditlogCredentials) {
    auditlogCredentials = {
      logToConsole: true
    };
  }
  auditLogging.v2(auditlogCredentials, function (err, auditLog) {
    var auditLogObj = auditLog;
    if (err) {
      module.exports.getLogger('/approuter').warning('Error in audit logging v2 initialization: ', err, ', using v1 of audit logging');
      auditLogObj = auditLogging(auditlogCredentials);
    }
    if (!auditLogObj) {
      callback('Could not create an auditlog instance');
    }
    callback(null,auditLogObj);
  });
};

module.exports.getLogger = function (loggerCategory) {
  return appLoggingContext.getLogger(loggerCategory);
};

module.exports.getTracer = function (location) {
  return appLoggingContext.getTracer(location);
};

module.exports.getExpressMiddleware = function () {
  return LoggingLib.expressMiddleware(appLoggingContext);
};

module.exports.createRequestContext = function (req) {
  return appLoggingContext.createRequestContext(req);
};
