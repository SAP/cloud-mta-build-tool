'use strict';

var xsenv = require('@sap/xsenv');

module.exports = {
  getCredentials: function(serviceName, ignoreDots) {
    try {
      return xsenv.cfServiceCredentials(function (service) {
        var vcapSrvServiceName;
        if (service.credentials && service.credentials['sap.cloud.service.alias']) {
          vcapSrvServiceName = ignoreDots ? service.credentials['sap.cloud.service.alias'].replace(/\./g, '') : service.credentials['sap.cloud.service.alias'];
          if (vcapSrvServiceName === serviceName) {
            return true;
          }
        }

        if (service.credentials && service.credentials['sap.cloud.service']) {
          vcapSrvServiceName = ignoreDots ? service.credentials['sap.cloud.service'].replace(/\./g, '') : service.credentials['sap.cloud.service'];
          if (vcapSrvServiceName === serviceName) {
            return true;
          }
        }

        if (service.tags) {
          for (var i = 0; i < service.tags.length; i++) {
            vcapSrvServiceName = ignoreDots ? service.tags[i].replace(/\./g, '') : service.tags[i];
            if (serviceName === vcapSrvServiceName) {
              return true;
            }
          }
        }
        return false;
      });
    }
    catch (e) {
      return null;
    }
  },

  getEndPoint: function (serviceCredentials, endPoint) {
    if (endPoint) {
      if (serviceCredentials.endpoints) {
        return {'url': serviceCredentials.endpoints[endPoint] + '/'};
      }
      if (serviceCredentials[endPoint]) {
        return {'url': serviceCredentials[endPoint] + '/'};
      }
    } else {
      return serviceCredentials.url ? {'url': serviceCredentials.url + '/'} : {'url': serviceCredentials.uri + '/'};
    }
  },

  getGrantType: function (serviceCredentials){
    if (serviceCredentials.grant_type){
      return serviceCredentials.grant_type;
    }
    return 'user_token';
  }
};
