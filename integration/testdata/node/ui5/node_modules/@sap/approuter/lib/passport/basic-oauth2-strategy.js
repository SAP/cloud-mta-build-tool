'use strict';

var assert = require('assert');
var Strategy = require('passport').Strategy;
var util = require('util');
var OAuth2 = require('./oauth2').OAuth2;
var passportUtils = require('./utils');

module.exports = BasicOAuth2Strategy;

function BasicOAuth2Strategy(options, verify) {
  assert(verify, 'BasicOAuth2Strategy requires a "verify" callback');
  assert(options.username, 'BasicOAuth2Strategy requires "username" option');
  assert(options.password, 'BasicOAuth2Strategy requires "password" option');

  this.name = 'basic-oauth2';
  this.verify = verify;
  this._username = options.username;
  this._password = options.password;
  this._oauth2 = new OAuth2(options);

  Strategy.call(this, options, verify);
}

util.inherits(BasicOAuth2Strategy, Strategy);

BasicOAuth2Strategy.prototype.authenticate = function (req) {
  var params = {
    username: this._username,
    password: this._password,
    'grant_type': 'password'
  };
  this._oauth2.getOAuthAccessToken(params, req.loggingContext, passportUtils.getAccessTokenCallback(this, req));
};
