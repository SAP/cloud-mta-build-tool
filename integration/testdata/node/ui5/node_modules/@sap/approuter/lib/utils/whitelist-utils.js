'use strict';

var URL = require('url');

exports.matchWhitelist = function(whitelist, origin) {
  var url = URL.parse(origin);
  if (!url.protocol || !url.host) {
    return false;
  }

  var checkUrl = url.protocol + '//' + url.host;
  return getMatchers(whitelist).some(function(matcher) {
    return matcher.test(checkUrl);
  });
};

exports.matchWithUrl = function (whitelist, originUrl) {
  var checkUrl = originUrl.protocol + '//' + originUrl.host;
  return getMatchers(whitelist).some(function(matcher) {
    return matcher.test(checkUrl);
  });
};

function getMatchers(whitelist) {
  return whitelist.map(createRegExFromItem);
}

function createRegExFromItem(item) {
  var regex = item.protocol || '[A-Za-z]{2,9}';
  regex += '(:\/\/)';
  regex += item.host.replace(/\./g, '\\.').replace('*', '.*') ;
  regex += item.port ? ':' + item.port : '(:[0-9]{1,5})?';
  regex += '$';
  return new RegExp(regex, 'i');
}
