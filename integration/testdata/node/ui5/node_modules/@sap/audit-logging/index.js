'use strict';

var utils = require('./lib/utils');
var request = require('request');
var format = require('util').format;
var debug = require('debug')('audit/rest-api-versions');
var deprecate = require('util').deprecate;

var auditLog = deprecate(require('./lib/v1/audit-log'), 'Audit log v1 APIs are deprecated. Use v2 if available on the Audit log server.');
var auditLogV2 = require('./lib/v2/audit-log');

auditLog.v2 = function (credentials, callback) {
  utils.validate.object(credentials, 'Credentials');
  utils.validate.callback(callback);

  if (credentials.logToConsole === true) {
    return callback(null, auditLogV2(credentials));
  }

  var uri = credentials.url + '/audit-log';

  debug('Sending request to %s', uri);
  request.get({
    uri: uri,
    json: true
  }, function (err, resp, body) {
    if (err) {
      debug('Error received:', err);
      return callback(err);
    }

    debug('Response status code: %d, Body: %j', resp.statusCode, body);
    if (resp.statusCode === 404) {
      return callback(new Error('Audit log server does not support REST API v2'));
    }

    if (resp.statusCode !== 200) {
      return callback(new Error(format('Status code %d received when checking supported REST API versions of Audit log server: %j', resp.statusCode, body)));
    }

    var v2ServiceOptions = body.versions.find(function (element) {
      return element.version === 'v2';
    });

    if (!v2ServiceOptions) {
      return callback(new Error('Audit log server does not support REST API v2'));
    }

    return callback(null, auditLogV2(credentials, v2ServiceOptions));
  });
};

module.exports = auditLog;
