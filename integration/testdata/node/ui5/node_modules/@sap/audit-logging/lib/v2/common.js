'use strict';

var utils = require('../utils');

module.exports = {
  log: log,
  dataSubject: dataSubject,
  logPrepare: logPrepare,
  logSuccess: logSuccess,
  logFailure: logFailure
};

function dataSubject(obj) {
  utils.validate.objectWithTypeAndId(obj, 'data-subject');
  if (obj.role !== undefined) {
    utils.validate.notEmptyString(obj.role, 'data-subject/role');
  }
  this._content['data_subject'] = obj;
  return this;
}

function logPrepare(callback) {
  if (this._content.hasOwnProperty('success')) {
    var whichFunction = this._content.success ? logSuccess.name : logFailure.name;
    throw new Error(whichFunction + ' already called on the current message');
  }
  logWithStatus.call(this, undefined, callback);
}

function logSuccess(callback) {
  logWithStatus.call(this, true, callback);
}

function logFailure(callback) {
  logWithStatus.call(this, false, callback);
}

function logWithStatus(success, callback) {
  utils.validate.callback(callback);
  this._validateContent();
  if (success !== undefined) {
    this._content.success = success;
  }
  this._transport.log(this, function (err) {
    callback(err);
  });
}

function log(callback) {
  utils.validate.callback(callback);
  this._validateContent();
  this._transport.log(this, function (err) {
    callback(err);
  });
}
