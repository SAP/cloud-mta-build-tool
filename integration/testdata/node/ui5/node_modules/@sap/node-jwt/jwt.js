// Copyright (c) 2016, Markus Strehle, SAP SE
// All rights reserved.
//
//
// Load bindings binary
//
if (process.platform === "win32") {
   process.env['SSOEXT_LIB'] =  __dirname + '\\deps\\win32\\' + process.arch + '\\sapssoext.dll';
}

if (process.sapjwtlib) {
	return module.exports = process.sapjwtlib;
}
var fs = require('fs'), path = require('path');

// Seed random numbers [gh-82]
Math.random();

var oldDir = process.cwd();
if (process.platform === "win32") {
  process.env['PATH'] = process.env['PATH'] + ';' + __dirname + '\\deps\\' + process.platform + '\\' + process.arch;
  process.env['SSOEXT_LIB'] =  __dirname + '\\deps\\win32\\' + process.arch + '\\sapssoext.dll';
  process.chdir(__dirname + '\\deps\\' + process.platform + '\\' + process.arch);
} else {
   if (process.platform === "darwin") {
     process.env['LD_LIBRARAY_PATH'] =  __dirname + '/deps/' + process.platform + '/' + process.arch;
     process.env['SSOEXT_LIB'] =  __dirname + '/deps/' + process.platform + '/' + process.arch + '/libsapssoext.dylib';
   } else {
    if( process.arch === 'ppc64' ) {
        var os = require('os');
        var endianer = os.endianness().toLowerCase();
        if( endianer === 'le' ) {
          process.env['LD_LIBRARAY_PATH'] =  __dirname + '/deps/' + process.platform + '/' + process.arch + endianer;
          process.env['SSOEXT_LIB'] =  __dirname + '/deps/' + process.platform + '/' + process.arch + endianer +'/libsapssoext.so';
        } else {
          process.env['LD_LIBRARAY_PATH'] =  __dirname + '/deps/' + process.platform + '/' + process.arch;
          process.env['SSOEXT_LIB'] =  __dirname + '/deps/' + process.platform + '/' + process.arch + '/libsapssoext.so';
        }
    }else {
     process.env['LD_LIBRARAY_PATH'] =  __dirname + '/deps/' + process.platform + '/' + process.arch;
     process.env['SSOEXT_LIB'] =  __dirname + '/deps/' + process.platform + '/' + process.arch + '/libsapssoext.so';
    }
   }
}
process.chdir(oldDir);

// Look for binary for this platform
var nVersion = parseInt(process.versions.node[0],10);
var v8;
if(nVersion > 8){
  v8 = 'n' + nVersion + '-'+ /[0-9]+\.[0-9]+/.exec(process.versions.v8)[0];
} else{
  v8 = 'v8-'+ /[0-9]+\.[0-9]+/.exec(process.versions.v8)[0];
}
var modPath = path.join(__dirname, 'bin', process.platform+ '-'+ process.arch+ '-'+ v8, 'jwt');
if( process.arch === 'ppc64' ) {
	var os = require('os');
	var endianer = os.endianness().toLowerCase();
	if( endianer === 'le' ) {
		modPath = path.join(__dirname, 'bin', process.platform+ '-'+ process.arch + endianer + '-'+ v8, 'jwt');
	}
}
try {
	fs.statSync(modPath+ '.node');
} catch (ex) {
	// No binary!
	throw ex;
	//throw new Error('`'+ modPath+ '.node` is missing. Try reinstalling `node-jwt`?');
}
// Pull in JWT implementation
process.sapjwtlib = module.exports = require(modPath).jwtValidation;
